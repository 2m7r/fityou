drop database IF EXISTS final_pjt;

create database final_pjt;
use final_pjt;

-- ------------------------- 유저 -----------------------------------
drop TABLE IF EXISTS users;
-- 1. 사용자와 트레이너를 통합 관리
CREATE TABLE users (
    user_id BIGINT AUTO_INCREMENT PRIMARY KEY, -- 고유 식별 ID
    name VARCHAR(100) NOT NULL, -- 이름
    birthDate DATE NOT NULL, -- 생년월일
    phoneNum VARCHAR(20), -- 전화번호
    gender ENUM('M', 'F', 'O') NOT NULL, -- 성별
    email VARCHAR(255) UNIQUE NOT NULL, -- 이메일
    username VARCHAR(50) UNIQUE NOT NULL, -- 로그인 아이디
    password VARCHAR(255) NOT NULL, -- 로그인 PW
    is_private_account BOOLEAN DEFAULT FALSE, -- 공개 / 비공개 계정
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    profileImage VARCHAR(255), -- 프로필 이미지 경로
    userDescription TEXT,
    security_question VARCHAR(255) NOT NULL, -- 본인 확인 질문
    security_answer VARCHAR(255) NOT NULL -- 본인 확인 답변
);

INSERT INTO users (name, birthDate, phoneNum, gender, email, username, password, is_private_account, userDescription, security_question, security_answer) VALUES
('이소희', '1995-07-09', '010-3456-7890', 'F', 'leesohui@example.com', 'leesohui', 'password123', false, '패션과 스타일에 관심 있는 사람', '부모님의 결혼 기념일은 언제인가요?', '1987-11-02'),
('김철수', '1990-05-15', '010-1234-5678', 'M', 'kimchulsoo@example.com', 'kimchulsoo', 'password123', false, '웹 개발자이자 기술 애호가', '어렸을 때 좋아했던 음식은 무엇인가요?', '피자'),
('이영희', '1992-07-22', '010-2345-6789', 'F', 'leeyounghee@example.com', 'leeyounghee', 'password123', true, '그래픽 디자이너이자 예술가', '첫 번째 애완동물의 이름은 무엇인가요?', '맥스'),
('박준호', '1985-02-10', '010-3456-7890', 'M', 'parkjunho@example.com', 'parkjunho', 'password123', false, '사진 애호가', '가장 기억에 남는 여행지는 어디인가요?', '파리'),
('김지연', '1995-03-25', '010-4567-8901', 'F', 'kimjiyeon@example.com', 'kimjiyeon', 'password123', false, '패션 블로거', '당신의 첫 번째 학교 이름은 무엇인가요?', '서울초등학교'),
('이상민', '1987-12-05', '010-5678-9012', 'M', 'leesangmin@example.com', 'leesangmin', 'password123', true, '음악을 좋아하는 사람', '부모님의 결혼 기념일은 언제인가요?', '1980-06-15'),
('최미래', '1993-09-10', '010-6789-0123', 'F', 'choimirae@example.com', 'choimirae', 'password123', false, '요리와 여행을 좋아하는 사람', '당신의 첫 번째 친구의 이름은 무엇인가요?', '김유진'),
('김민수', '1991-04-25', '010-7890-1234', 'M', 'minsu@example.com', 'minsu', 'password123', true, '헬스와 피트니스 애호가', '가장 좋아하는 영화 제목은 무엇인가요?', '어벤져스'),
('장혜진', '1994-06-30', '010-8901-2345', 'F', 'janghyejin@example.com', 'janghyejin', 'password123', false, '책을 좋아하는 사람', '첫 번째 차의 모델은 무엇인가요?', '소나타'),
('이수진', '1990-12-12', '010-9012-3456', 'F', 'susjins@example.com', 'susjin', 'password123', true, '디지털 아트와 디자인을 좋아하는 사람', '어린 시절 살았던 도시 이름은 무엇인가요?', '대구'),
('박성민', '1988-11-18', '010-0123-4567', 'M', 'parkseongmin@example.com', 'parkseongmin', 'password123', false, '게임을 좋아하는 개발자', '가장 좋아하는 스포츠 팀은 무엇인가요?', 'FC Barcelona'),
('한지우', '1996-08-04', '010-1234-5678', 'F', 'hanjiwoo@example.com', 'hanjiwoo', 'password123', true, '여행과 운동을 좋아하는 사람', '어렸을 때 좋아했던 음식은 무엇인가요?', '떡볶이'),
('최지훈', '1992-02-25', '010-2345-6789', 'M', 'choijihun@example.com', 'choijihun', 'password123', false, '컴퓨터 게임을 즐기는 개발자', '첫 번째 애완동물의 이름은 무엇인가요?', '뽀로로'),
('김민지', '1993-05-10', '010-3456-7890', 'F', 'kimminji@example.com', 'kimminji', 'password123', true, '요가와 명상을 즐기는 사람', '가장 기억에 남는 여행지는 어디인가요?', '도쿄'),
('이상우', '1989-01-14', '010-4567-8901', 'M', 'leesangwoo@example.com', 'leesangwoo', 'password123', false, '운동을 좋아하는 트레이너', '당신의 첫 번째 학교 이름은 무엇인가요?', '부산중학교'),
('홍수진', '1994-10-30', '010-5678-9012', 'F', 'hongsujin@example.com', 'hongsujin', 'password123', false, '음악과 영화 애호가', '부모님의 결혼 기념일은 언제인가요?', '1985-09-22'),
('오민석', '1991-03-05', '010-6789-0123', 'M', 'ominseok@example.com', 'ominseok', 'password123', true, '기술과 스타트업에 관심 있는 사람', '당신의 첫 번째 친구의 이름은 무엇인가요?', '박지호'),
('김나래', '1990-11-20', '010-7890-1234', 'F', 'kimnarae@example.com', 'kimnarae', 'password123', true, '패션과 뷰티 블로거', '가장 좋아하는 영화 제목은 무엇인가요?', '라라랜드'),
('정재훈', '1986-09-18', '010-8901-2345', 'M', 'jeongjaehoon@example.com', 'jeongjaehoon', 'password123', false, '영화 제작에 관심 있는 사람', '첫 번째 차의 모델은 무엇인가요?', '현대 아반떼'),
('박서윤', '1992-04-14', '010-9012-3456', 'F', 'parkseoyun@example.com', 'parkseoyun', 'password123', true, '디지털 아티스트', '어린 시절 살았던 도시 이름은 무엇인가요?', '서울'),
('강민정', '1993-07-28', '010-0123-4567', 'F', 'kangminjeong@example.com', 'kangminjeong', 'password123', false, '자기 계발을 좋아하는 사람', '가장 좋아하는 스포츠 팀은 무엇인가요?', '서울 FC'),
('한승민', '1988-12-11', '010-1234-5678', 'M', 'hanseungmin@example.com', 'hanseungmin', 'password123', true, '기계공학을 공부하는 학생', '어렸을 때 좋아했던 음식은 무엇인가요?', '햄버거'),
('이채은', '1994-05-21', '010-2345-6789', 'F', 'lechaeun@example.com', 'lechaeun', 'password123', false, '독서를 즐기는 사람', '첫 번째 애완동물의 이름은 무엇인가요?', '보리'),
('김도현', '1990-03-16', '010-3456-7890', 'M', 'kimdohyun@example.com', 'kimdohyun', 'password123', true, '스타트업 창업자', '가장 기억에 남는 여행지는 어디인가요?', '뉴욕'),
('이소영', '1995-10-05', '010-4567-8901', 'F', 'leesoyoung@example.com', 'leesoyoung', 'password123', false, '사회적 기업에 관심 있는 사람', '당신의 첫 번째 학교 이름은 무엇인가요?', '서울고등학교'),
('정유진', '1991-02-28', '010-5678-9012', 'F', 'jeongyujin@example.com', 'jeongyujin', 'password123', true, '환경 보호 활동에 관심 있는 사람', '부모님의 결혼 기념일은 언제인가요?', '1979-03-21'),
('박성호', '1987-06-12', '010-6789-0123', 'M', 'parkseongho@example.com', 'parkseongho', 'password123', false, '축구와 여행을 즐기는 사람', '당신의 첫 번째 친구의 이름은 무엇인가요?', '최현우'),
('오유진', '1994-12-01', '010-7890-1234', 'F', 'oyujin@example.com', 'oyujin', 'password123', true, '회사를 운영하는 창업자', '가장 좋아하는 영화 제목은 무엇인가요?', '인셉션'),
('강지훈', '1990-08-22', '010-8901-2345', 'M', 'kangjihoon@example.com', 'kangjihoon', 'password123', false, '음악과 춤을 좋아하는 사람', '첫 번째 차의 모델은 무엇인가요?', '기아 모닝'),
('김싸피', '2024-11-11', '010-3333-4444', 'M', 'ssafy@ssafy.com', 'ssafy', 'ssafy', FALSE, '웹 개발과 프로그래밍을 좋아하는 사람', '가장 기억에 남는 여행지는 어디인가요?', '성심당'),
('임가현', '1999-10-01', '010-5555-6666', 'F', '2m7r.sw@gmail.com', 'rkgus', 'rkgus', TRUE, '여행과 책을 좋아하는 사람', '첫 번째 애완동물의 이름은 무엇인가요?', '가롱'),
('이태웃씌', '1997-03-05', '010-2222-4444', 'O', 'xodn@xodn.com', 'xodn', 'xodn', TRUE, '기술과 스타트업에 관심이 많은 사람', '가장 좋아하는 영화 제목은 무엇인가요?', '내인생'),
('김유정', '1991-04-18', '010-1234-5678', 'F', 'kimyujeong@example.com', 'kimyujeong', 'password123', false, '영화 감상과 글쓰기를 좋아하는 사람', '어렸을 때 좋아했던 음식은 무엇인가요?', '떡볶이'),
('박혜민', '1989-12-08', '010-2345-6789', 'M', 'parkhyemin@example.com', 'parkhyemin', 'password123', true, '디지털 미디어와 게임을 즐기는 사람', '첫 번째 애완동물의 이름은 무엇인가요?', '해피'),
('정서희', '1994-06-25', '010-3456-7890', 'F', 'jeongseohee@example.com', 'jeongseohee', 'password123', false, '여행과 맛집 탐방을 좋아하는 사람', '가장 기억에 남는 여행지는 어디인가요?', '바르셀로나'),
('김영진', '1990-02-19', '010-4567-8901', 'M', 'kimgyeongjin@example.com', 'kimgyeongjin', 'password123', true, '문학과 음악을 좋아하는 사람', '당신의 첫 번째 학교 이름은 무엇인가요?', '서울고등학교'),
('이승환', '1988-11-10', '010-5678-9012', 'M', 'leesunghwan@example.com', 'leesunghwan', 'password123', false, '철학과 역사에 관심 있는 사람', '부모님의 결혼 기념일은 언제인가요?', '1987-12-01'),
('장수현', '1992-05-15', '010-6789-0123', 'F', 'jangsoohyun@example.com', 'jangsoohyun', 'password123', true, '예술과 공연을 좋아하는 사람', '당신의 첫 번째 친구의 이름은 무엇인가요?', '이재우'),
('강지현', '1993-07-07', '010-7890-1234', 'F', 'kangjihyun@example.com', 'kangjihyun', 'password123', false, '디지털 아트와 패션에 관심 있는 사람', '가장 좋아하는 영화 제목은 무엇인가요?', '타이타닉'),
('정호영', '1990-10-30', '010-8901-2345', 'M', 'jeonghoyeong@example.com', 'jeonghoyeong', 'password123', true, '테크 산업에 관심 있는 사람', '첫 번째 차의 모델은 무엇인가요?', '현대 아반떼'),
('최수연', '1991-03-01', '010-9012-3456', 'F', 'choisuyeon@example.com', 'choisuyeon', 'password123', false, '패션과 뷰티를 사랑하는 사람', '어린 시절 살았던 도시 이름은 무엇인가요?', '서울'),
('홍정훈', '1995-02-14', '010-0123-4567', 'M', 'hongjeonghoon@example.com', 'hongjeonghoon', 'password123', true, '음악과 영화 애호가', '가장 좋아하는 스포츠 팀은 무엇인가요?', 'Manchester United'),
('오혜영', '1994-09-25', '010-1234-5678', 'F', 'ohhyeyoung@example.com', 'ohhyeyoung', 'password123', false, '요리와 여행을 즐기는 사람', '어렸을 때 좋아했던 음식은 무엇인가요?', '김치찌개'),
('조민수', '1992-11-04', '010-2345-6789', 'M', 'joheemin@example.com', 'joheemin', 'password123', true, '기술과 창업에 관심 있는 사람', '첫 번째 애완동물의 이름은 무엇인가요?', '포도'),
('한나영', '1993-03-28', '010-3456-7890', 'F', 'hannahyeong@example.com', 'hannahyeong', 'password123', false, '문화와 예술에 관심 있는 사람', '가장 기억에 남는 여행지는 어디인가요?', '런던'),
('이시우', '1991-08-09', '010-4567-8901', 'M', 'leesiu@example.com', 'leesiu', 'password123', true, '게임과 스포츠를 좋아하는 사람', '당신의 첫 번째 학교 이름은 무엇인가요?', '부산고등학교'),
('박상우', '1990-01-16', '010-5678-9012', 'M', 'parksangwoo@example.com', 'parksangwoo', 'password123', false, '운동과 건강에 관심 있는 사람', '부모님의 결혼 기념일은 언제인가요?', '1982-05-12'),
('조유리', '1993-12-13', '010-6789-0123', 'F', 'joyuri@example.com', 'joyuri', 'password123', true, '음악과 여행을 사랑하는 사람', '당신의 첫 번째 친구의 이름은 무엇인가요?', '김예린'),
('박소윤', '1994-08-21', '010-7890-1234', 'F', 'parksoyun@example.com', 'parksoyun', 'password123', false, '디자인과 창작을 즐기는 사람', '가장 좋아하는 영화 제목은 무엇인가요?', '인터스텔라'),
('정명호', '1991-06-07', '010-8901-2345', 'M', 'jeongmyungho@example.com', 'jeongmyungho', 'password123', true, '과학과 혁신에 관심 있는 사람', '첫 번째 차의 모델은 무엇인가요?', 'K5'),
('김수진', '1990-04-12', '010-9012-3456', 'F', 'kimsujin@example.com', 'kimsujin', 'password123', false, '예술과 영화에 대한 관심이 많은 사람', '어린 시절 살았던 도시 이름은 무엇인가요?', '대전'),
('이승주', '1992-12-04', '010-0123-4567', 'M', 'leesungju@example.com', 'leesungju', 'password123', true, '사회적 기업에 관심 있는 사람', '가장 좋아하는 스포츠 팀은 무엇인가요?', 'LA Lakers'),
('김태경', '1993-05-24', '010-1234-5678', 'F', 'kimtaekyung@example.com', 'kimtaekyung', 'password123', false, '음악과 미술을 사랑하는 사람', '가장 기억에 남는 여행지는 어디인가요?', '파리'),
('장성호', '1994-03-15', '010-2345-6789', 'M', 'jangseongho@example.com', 'jangseongho', 'password123', true, '모험과 여행을 즐기는 사람', '당신의 첫 번째 학교 이름은 무엇인가요?', '서울중학교');

-- SELECT * FROM users;


-- ------------------------- 선호운동 -----------------------------------
drop table IF EXISTS preferred_exercises;
-- 선호 운동
CREATE TABLE preferred_exercises (
    exercise_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT NOT NULL,  -- 사용자 ID
    exercise_name VARCHAR(100) NOT NULL,  -- 운동 이름
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,  -- 생성 시간
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,
    CONSTRAINT unique_user_exercise UNIQUE (user_id, exercise_name)  -- 유니크 제약
);

INSERT INTO preferred_exercises (user_id, exercise_name) VALUES
(1, '헬스'),
(1, '요가'),
(2, '필라테스'),
(2, '크로스핏'),
(3, '방송댄스'),
(3, '수영'),
(4, '러닝'),
(4, '스피닝'),
(5, '복싱'),
(5, '태권도'),
(6, '유도'),
(6, '스쿼시'),
(7, '탁구'),
(7, '배드민턴'),
(8, '축구'),
(8, '농구'),
(9, '배구'),
(9, '골프'),
(10, '테니스'),
(10, '보디빌딩'),
(11, '발레'),
(11, '에어로빅'),
(12, '클라이밍'),
(12, '기타'),
(13, '헬스'),
(13, '요가'),
(14, '크로스핏'),
(14, '수영'),
(15, '러닝'),
(15, '스피닝'),
(16, '복싱'),
(16, '태권도'),
(17, '유도'),
(17, '스쿼시'),
(18, '탁구'),
(18, '배드민턴'),
(19, '축구'),
(19, '농구'),
(20, '배구'),
(20, '골프'),
(21, '테니스'),
(21, '보디빌딩'),
(22, '발레'),
(22, '에어로빅'),
(23, '클라이밍'),
(23, '기타'),
(24, '헬스'),
(24, '요가'),
(25, '필라테스'),
(25, '크로스핏'),
(26, '방송댄스'),
(26, '수영'),
(27, '러닝'),
(27, '스피닝'),
(28, '복싱'),
(28, '태권도'),
(29, '유도'),
(29, '스쿼시'),
(30, '탁구'),
(30, '배드민턴'),
(31, '축구'),
(31, '농구'),
(32, '배구'),
(32, '골프'),
(33, '테니스'),
(33, '보디빌딩'),
(34, '발레'),
(34, '에어로빅'),
(35, '클라이밍'),
(35, '기타'),
(36, '헬스'),
(36, '요가'),
(37, '크로스핏'),
(37, '수영'),
(38, '러닝'),
(38, '스피닝'),
(39, '복싱'),
(39, '태권도'),
(40, '유도'),
(40, '스쿼시'),
(41, '탁구'),
(41, '배드민턴'),
(42, '축구'),
(42, '농구'),
(43, '배구'),
(43, '골프'),
(44, '테니스'),
(44, '보디빌딩'),
(45, '발레'),
(45, '에어로빅'),
(46, '클라이밍'),
(46, '기타'),
(47, '헬스'),
(47, '요가'),
(48, '필라테스'),
(48, '크로스핏'),
(49, '방송댄스'),
(49, '수영'),
(50, '러닝'),
(50, '스피닝'),
(51, '복싱'),
(51, '태권도'),
(52, '유도'),
(52, '스쿼시'),
(53, '탁구'),
(53, '배드민턴');

-- select * from preferred_exercises;

-- ------------------------- 식단일기 -----------------------------------
DROP TABLE IF EXISTS diet;
-- 2. 식단
CREATE TABLE diet (
    diet_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT NOT NULL, -- 사용자 ID
    name VARCHAR(100) NOT NULL, -- 이름
    breakfastImagePath VARCHAR(255),  -- 아침 식단 사진 경로
    lunchImagePath VARCHAR(255),      -- 점심 식단 사진 경로
    dinnerImagePath VARCHAR(255),      -- 저녁 식단 사진 경로
    content TEXT,  -- 기록 내용 (식단 내용 등)
    record_date DATE NOT NULL,  -- 기록 날짜 (YYYY-MM-DD)
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,
    CONSTRAINT unique_record_date UNIQUE (user_id, record_date) -- user_id와 record_date가 복합적으로 유니크
);

-- diet 테이블 더미 데이터
INSERT INTO diet (user_id, name, breakfastImagePath, lunchImagePath, dinnerImagePath, content, record_date) VALUES
(1, '김싸피', NULL, NULL, NULL, '아침: 오트밀, 바나나, 블루베리. 점심: 닭가슴살 샐러드. 저녁: 고구마와 브로콜리, 삶은 계란.', '2024-11-01'),
(2, '임가현', NULL, NULL, NULL, '아침: 계란 프라이와 토스트, 커피. 점심: 불고기와 밥, 김치. 저녁: 두부와 미소국.', '2024-11-02'),
(3, '이태웃씌', NULL, NULL, NULL, '아침: 요구르트와 시리얼. 점심: 샐러드와 파스타, 그린티. 저녁: 스테이크와 아보카도, 시금치.', '2024-11-03'),
(4, '박혜지', NULL, NULL, NULL, '아침: 뮤즐리와 딸기. 점심: 닭가슴살 샐러드. 저녁: 현미밥과 나물, 계란찜.', '2024-11-04'),
(5, '정다정', NULL, NULL, NULL, '아침: 바나나와 계란 프라이, 커피. 점심: 제육덮밥, 된장국. 저녁: 된장찌개와 밥, 김치.', '2024-11-05'),
(6, '최서영', NULL, NULL, NULL, '아침: 스무디 (시금치, 바나나, 아몬드밀크). 점심: 치킨 샐러드. 저녁: 고등어구이, 샐러드.', '2024-11-06'),
(7, '김민지', NULL, NULL, NULL, '아침: 오트밀과 아몬드, 블루베리. 점심: 된장찌개와 밥, 김치. 저녁: 삶은 달걀, 아보카도 샐러드.', '2024-11-07'),
(8, '유진영', NULL, NULL, NULL, '아침: 시리얼과 우유. 점심: 샐러드와 치킨. 저녁: 된장국과 밥, 미역줄기 볶음.', '2024-11-08'),
(9, '조은지', NULL, NULL, NULL, '아침: 스크램블 에그와 토스트. 점심: 쌀국수와 오이 샐러드. 저녁: 소고기 무국, 밥.', '2024-11-09'),
(10, '정우정', NULL, NULL, NULL, '아침: 스무디볼 (바나나, 딸기, 요거트). 점심: 닭가슴살과 샐러드. 저녁: 참치회, 김밥.', '2024-11-10');

-- select * from diet;


-- ------------------------- 팔로우 -----------------------------------
drop table IF EXISTS follows;
-- 3. 팔로우 관계를 저장
CREATE TABLE follows (
    user_id BIGINT NOT NULL,
    following_id BIGINT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (user_id, following_id),
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (following_id) REFERENCES users(user_id) ON DELETE CASCADE
);

INSERT INTO follows (user_id, following_id) VALUES
(1, 2), 
(1, 3),
(2, 1),
(2, 4),
(3, 1),
(3, 5),
(4, 2),
(4, 3),
(5, 1),
(5, 6),
(6, 7),
(6, 1),
(7, 8),
(7, 9),
(8, 10),
(8, 1),
(9, 2),
(9, 11),
(10, 3),
(10, 12),
(11, 4),
(11, 5),
(12, 6),
(12, 1),
(13, 7),
(13, 8),
(14, 9),
(14, 10),
(15, 11),
(15, 1),
(16, 12),
(16, 13),
(17, 14),
(17, 15),
(18, 16),
(18, 1),
(19, 17),
(19, 18),
(20, 19),
(20, 1),
(21, 20),
(21, 2),
(22, 21),
(22, 3),
(23, 22),
(23, 1),
(24, 23),
(24, 4),
(25, 24),
(25, 5),
(26, 6),
(26, 1),
(27, 7),
(27, 8),
(28, 9),
(28, 1),
(29, 10),
(29, 11),
(30, 12),
(30, 1),
(31, 13),
(31, 14),
(32, 15),
(32, 1),
(33, 16),
(33, 17),
(34, 18),
(34, 1),
(35, 19),
(35, 20),
(36, 21),
(36, 1),
(37, 22),
(37, 23),
(38, 24),
(38, 1),
(39, 25),
(39, 26),
(40, 27),
(40, 1),
(41, 28),
(41, 29),
(42, 30),
(42, 1),
(43, 31),
(43, 32),
(44, 33),
(44, 1),
(45, 34),
(45, 35),
(46, 36),
(46, 1),
(47, 37),
(47, 38),
(48, 39),
(48, 1),
(49, 40),
(49, 41),
(50, 42),
(50, 1),
(51, 43),
(51, 44),
(52, 45),
(52, 1),
(53, 46),
(53, 47);

-- SELECT * FROM follows;


-- --------------------------- 챌린지 -----------------------------------
drop table IF EXISTS challenges;
-- 4. 챌린지 정보를 저장
CREATE TABLE challenges (
    challenge_id BIGINT AUTO_INCREMENT PRIMARY KEY, -- 고유 식별 ID
    name VARCHAR(255) NOT NULL, -- 챌린지 이름
    creator_user_id BIGINT NOT NULL, -- 챌린지 등록 유저ID
    creator_user_name VARCHAR(100),
    description TEXT, -- 설명
    participant_count INT DEFAULT 1, -- 챌린지 현재 참여자 수
    duration_start DATE NOT NULL, -- 시작날짜
    duration_end DATE NOT NULL, -- 끝나는 날짜
    exercise_type VARCHAR(100), -- 헬스, 요가, 식단 등등
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (creator_user_id) REFERENCES users(user_id) ON DELETE CASCADE
);

INSERT INTO challenges (name, creator_user_id, creator_user_name, description, participant_count, duration_start, duration_end, exercise_type) VALUES
('30일 다이어트 챌린지', 1, '김싸피', '30일 동안 꾸준한 다이어트 식단과 운동을 통해 체중을 감량하는 목표의 챌린지입니다. 참여자들은 매일 운동 기록과 식단을 공유하고, 중간 점검을 통해 결과를 평가받습니다. 참가자들이 서로의 진행 상황을 체크하며 동기 부여를 주고받는 방식으로 진행됩니다.', 25, '2024-12-01', '2025-01-01', '식단, 운동'),
('매일 1시간 운동하기', 2, '임가현', '매일 1시간씩 운동을 하는 습관을 만들기 위한 챌린지입니다. 운동의 종류는 자유롭게 선택할 수 있으며, 지속적인 운동 기록을 통해 참여자들이 목표를 달성하도록 돕습니다. 운동 후 스트레칭과 체력 관리를 함께 하여 건강한 몸을 만들기 위한 목표를 설정합니다.', 15, '2024-11-01', '2024-11-30', '헬스, 요가, 크로스핏'),
('요가와 명상으로 몸과 마음 챙기기', 3, '이태웃씌', '요가와 명상을 통해 몸과 마음을 건강하게 만드는 챌린지입니다. 매일 아침 30분 이상 요가와 명상을 진행하고, 이를 기록합니다. 참여자는 각자의 발전 상황을 공유하며, 스트레스 해소와 정신적인 평화를 추구합니다.', 18, '2024-10-01', '2024-10-30', '요가, 명상'),
('매일 10,000보 걷기 챌린지', 4, '박소미', '하루에 10,000보 이상 걷는 것을 목표로 한 챌린지입니다. 참여자들은 스마트폰이나 운동 기기를 사용해 걸음 수를 기록하고, 서로의 목표 달성 여부를 확인합니다. 건강한 심혈관 건강을 위한 걷기 운동을 통해 생활 속에서 활발하게 활동하는 습관을 기를 수 있습니다.', 30, '2024-09-01', '2024-09-30', '헬스, 걷기'),
('3주간의 필라테스 챌린지', 5, '최지은', '3주 동안 매일 30분 이상 필라테스를 진행하며, 유연성과 근력을 키우는 챌린지입니다. 필라테스를 처음 접하는 사람부터 경험이 있는 사람까지 모두 참여할 수 있으며, 참여자들이 필라테스를 통해 운동 효과를 극대화하고, 운동 후 피드백을 통해 자기 개선의 시간을 가질 수 있습니다.', 20, '2024-12-01', '2024-12-21', '필라테스'),
('크로스핏 30일 도전', 6, '정윤철', '크로스핏을 통해 체력을 향상시키고, 도전 정신을 키울 수 있는 챌린지입니다. 30일 동안 매일 다른 운동을 하여 전신 운동을 진행하며, 각 운동을 기록하고 서로의 진행 상황을 공유하여 동기를 부여합니다. 끝까지 도전하는 참가자들에게 특별한 상도 제공됩니다.', 22, '2024-08-01', '2024-08-30', '크로스핏'),
('스쿼트 100회 도전', 7, '김현수', '매일 100회의 스쿼트를 목표로 하는 챌린지입니다. 참가자들은 30일 동안 매일 100회씩 스쿼트를 진행하고, 이를 기록하여 서로의 진행 상황을 체크합니다. 하체 근력을 키우고, 체지방 감소와 다리 라인 개선을 목표로 하는 운동입니다.', 17, '2024-06-01', '2024-06-30', '헬스, 보디빌딩'),
('30일 자전거 라이딩 챌린지', 8, '이재민', '30일 동안 매일 자전거를 타고 10km 이상을 달리는 챌린지입니다. 자전거를 타는 동안 주변 환경을 즐기며, 체력도 키울 수 있습니다. 참여자들은 자전거 라이딩 기록을 공유하고 서로를 격려하는 방식으로 챌린지가 진행됩니다.', 14, '2024-05-01', '2024-05-30', '사이클'),
('매일 5분 스트레칭 챌린지', 9, '강희정', '매일 5분씩 간단한 스트레칭을 진행하는 챌린지입니다. 긴장된 근육을 풀고, 하루의 피로를 날리기 위한 목적의 챌린지로, 운동을 시작하기 전이나 끝나고 하는 스트레칭 루틴을 강조합니다. 참여자는 각자의 스트레칭 루틴을 기록하며 공유합니다.', 10, '2024-04-01', '2024-04-30', '스트레칭'),
('집에서 하는 홈트레이닝 챌린지', 10, '최윤서', '특별한 장비 없이 집에서 할 수 있는 홈트레이닝 챌린지입니다. 참여자들은 매일 20분 이상의 운동을 진행하며, 스쿼트, 푸시업, 플랭크 등을 포함한 전신 운동을 합니다. 이 챌린지를 통해 참여자는 집에서도 운동을 할 수 있다는 사실을 깨닫고, 규칙적인 운동 습관을 기릅니다.', 12, '2024-03-01', '2024-03-30', '헬스, 홈트'),
('30일 걷기&달리기 챌린지', 11, '정민우', '걷기와 달리기를 병행하여 30일 동안 체력을 증진시키는 챌린지입니다. 매일 하루에 30분 이상 걷거나 달리기를 하며, 참여자들은 각자의 운동 기록을 공유하고 피드백을 받습니다. 이 챌린지는 운동을 시작하는 사람들에게도 적합합니다.', 28, '2024-02-01', '2024-02-28', '러닝, 걷기'),
('매일 10분 명상 챌린지', 12, '김지훈', '매일 10분씩 명상을 진행하는 챌린지입니다. 스트레스 관리와 정신적인 안정을 위해 매일 아침 명상을 실천하는 목표를 가지고 있습니다. 참여자들은 자신의 명상 기록을 작성하고, 명상의 효과를 서로 공유하며 동기 부여를 합니다. 정신 건강을 중시하는 분들에게 적합한 챌린지입니다.', 20, '2024-01-01', '2024-01-31', '명상'),
('5kg 감량 도전 챌린지', 13, '이유진', '5kg 체중 감량을 목표로 한 챌린지입니다. 식단 관리와 운동을 병행하며, 건강하게 체중을 감량하는 목표를 가집니다. 참여자들은 체중과 운동 기록을 공유하며 서로 격려하고, 5kg 감량에 성공한 사람에게는 소정의 선물이 제공됩니다.', 25, '2024-11-01', '2024-11-30', '식단, 운동'),
('매일 30분 영어 공부 챌린지', 14, '박성호', '영어 공부를 매일 30분씩 하는 습관을 기르는 챌린지입니다. 매일 지정된 영어 학습 내용을 보고, 학습 내용을 기록하며 진행합니다. 언어 능력을 향상시키고 싶은 사람들에게 적합한 챌린지입니다. 참여자들은 함께 공부하며 동기 부여를 얻습니다.', 18, '2024-08-01', '2024-08-30', '학습'),
('하루 1시간 독서 챌린지', 15, '홍성호', '하루에 최소 1시간씩 책을 읽는 챌린지입니다. 참여자들은 자신이 읽은 책을 기록하고, 책에 대한 감상과 의견을 공유합니다. 독서 습관을 기르고, 다양한 분야의 책을 접할 수 있는 기회를 제공합니다.', 22, '2024-07-01', '2024-07-31', '독서'),
('30일 체력 증진 챌린지', 16, '정수진', '30일 동안 체력을 키우기 위한 운동 챌린지입니다. 매일 30분 이상의 운동을 진행하며, 체력 향상과 함께 근육량 증가를 목표로 합니다. 다양한 운동을 조합하여 진행하며, 기록을 통해 동기 부여를 받고 서로를 격려합니다.', 30, '2024-06-01', '2024-06-30', '헬스, 운동');

-- select * from challenges;


drop table if exists challenge_people;
-- 5. 챌린지별 참여하고 있는 참여자 목록 저장
CREATE TABLE challenge_people (
    user_id BIGINT NOT NULL, -- 참여한 유저ID
    challenge_id BIGINT NOT NULL, -- 참여한 챌린지ID
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (challenge_id) REFERENCES challenges(challenge_id) ON DELETE CASCADE,
    UNIQUE(user_id, challenge_id) -- 한 사람이 동일한 챌린지에 한 번만 참여하도록 제한
);

INSERT INTO challenge_people (user_id, challenge_id) VALUES
-- 매일 10분 명상 챌린지 (참여자 수: 20명)
(1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (6, 1), (7, 1), (8, 1), (9, 1), (10, 1), 
(11, 1), (12, 1), (13, 1), (14, 1), (15, 1), (16, 1), (17, 1), (18, 1), (19, 1), (20, 1),

-- 5kg 감량 도전 챌린지 (참여자 수: 25명)
(1, 2), (2, 2), (3, 2), (4, 2), (5, 2), (6, 2), (7, 2), (8, 2), (9, 2), (10, 2), 
(11, 2), (12, 2), (13, 2), (14, 2), (15, 2), (16, 2), (17, 2), (18, 2), (19, 2), (20, 2),
(21, 2), (22, 2), (23, 2), (24, 2), (25, 2),

-- 매일 30분 영어 공부 챌린지 (참여자 수: 18명)
(1, 3), (2, 3), (3, 3), (4, 3), (5, 3), (6, 3), (7, 3), (8, 3), (9, 3), (10, 3),
(11, 3), (12, 3), (13, 3), (14, 3), (15, 3), (16, 3), (17, 3), (18, 3),

-- 하루 1시간 독서 챌린지 (참여자 수: 22명)
(1, 4), (2, 4), (3, 4), (4, 4), (5, 4), (6, 4), (7, 4), (8, 4), (9, 4), (10, 4),
(11, 4), (12, 4), (13, 4), (14, 4), (15, 4), (16, 4), (17, 4), (18, 4), (19, 4), (20, 4),
(21, 4), (22, 4),

-- 30일 체력 증진 챌린지 (참여자 수: 19명)
(1, 5), (2, 5), (3, 5), (4, 5), (5, 5), (6, 5), (7, 5), (8, 5), (9, 5), (10, 5),
(11, 5), (12, 5), (13, 5), (14, 5), (15, 5), (16, 5), (17, 5), (18, 5), (19, 5),

-- 30일 음식 일기 챌린지 (참여자 수: 15명)
(1, 6), (2, 6), (3, 6), (4, 6), (5, 6), (6, 6), (7, 6), (8, 6), (9, 6), (10, 6),
(11, 6), (12, 6), (13, 6), (14, 6), (15, 6),

-- 주 3회 등산 챌린지 (참여자 수: 17명)
(1, 7), (2, 7), (3, 7), (4, 7), (5, 7), (6, 7), (7, 7), (8, 7), (9, 7), (10, 7),
(11, 7), (12, 7), (13, 7), (14, 7), (15, 7), (16, 7), (17, 7),

-- 매일 50번 푸시업 챌린지 (참여자 수: 23명)
(1, 8), (2, 8), (3, 8), (4, 8), (5, 8), (6, 8), (7, 8), (8, 8), (9, 8), (10, 8),
(11, 8), (12, 8), (13, 8), (14, 8), (15, 8), (16, 8), (17, 8), (18, 8), (19, 8), (20, 8),
(21, 8), (22, 8), (23, 8),

-- 매일 아침 30분 달리기 챌린지 (참여자 수: 28명)
(1, 9), (2, 9), (3, 9), (4, 9), (5, 9), (6, 9), (7, 9), (8, 9), (9, 9), (10, 9),
(11, 9), (12, 9), (13, 9), (14, 9), (15, 9), (16, 9), (17, 9), (18, 9), (19, 9), (20, 9),
(21, 9), (22, 9), (23, 9), (24, 9), (25, 9), (26, 9), (27, 9), (28, 9),

-- 30일 비건식 챌린지 (참여자 수: 30명)
(1, 10), (2, 10), (3, 10), (4, 10), (5, 10), (6, 10), (7, 10), (8, 10), (9, 10), (10, 10),
(11, 10), (12, 10), (13, 10), (14, 10), (15, 10), (16, 10), (17, 10), (18, 10), (19, 10), (20, 10),
(21, 10), (22, 10), (23, 10), (24, 10), (25, 10), (26, 10), (27, 10), (28, 10), (29, 10), (30, 10);


-- select * from challenge_people;

-- -----------------------운동 일기 ----------------------------------------------
-- 6. 운동
-- 운동 일기 테이블
DROP TABLE IF EXISTS workouts;
CREATE TABLE workouts (
    workout_id BIGINT AUTO_INCREMENT PRIMARY KEY, -- 고유ID
    user_id BIGINT NOT NULL, -- 유저ID
    name VARCHAR(100) NOT NULL,
    description TEXT, -- 설명
    record_date DATE NOT NULL,  -- 기록 날짜 (YYYY-MM-DD)
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,
    CONSTRAINT unique_record_date UNIQUE (user_id, record_date) -- user_id와 record_date가 복합적으로 유니크
);

INSERT INTO workouts (user_id, name, description, record_date) VALUES
(1, '이소희', '오늘은 하체 집중 운동을 했습니다. 스쿼트를 중점적으로 하고, 레그프레스를 추가해서 하체를 강화하려고 했어요.', '2024-11-01'),
(2, '김철수', '등 운동을 주로 하였고, 랫풀다운과 풀업을 많이 했습니다. 어깨도 조금 집중해서 했어요.', '2024-11-02'),
(3, '이영희', '복부에 집중한 날! 크런치와 레그레이즈를 반복하면서 복근을 자극했어요.', '2024-11-03'),
(4, '박준호', '버피와 점핑잭을 섞어서 전신을 운동했어요. 오늘은 정말 땀을 많이 흘렸습니다.', '2024-11-04'),
(5, '김지연', '팔에 집중했어요. 바벨 컬과 덤벨 컬을 통해 이두근을 강화하고, 트라이셉스 푸쉬다운으로 삼두근도 신경 썼습니다.', '2024-11-05'),
(6, '이상민', '밀리터리 프레스와 덤벨 숄더 프레스를 주로 했어요. 어깨가 정말 펌핑되었어요!', '2024-11-06'),
(7, '최미래', '런지를 많이 했습니다. 하체와 엉덩이의 변화를 느끼면서 즐겁게 운동했어요.', '2024-11-07'),
(8, '김민수', '케틀벨 스윙과 점핑잭을 하면서 전신을 가볍게 풀어주었어요.', '2024-11-08'),
(9, '장혜진', '벤치프레스와 덤벨프레스를 통해 가슴을 집중적으로 운동했어요. 조금 힘들었지만 효과적인 느낌!', '2024-11-09'),
(10, '이수진', '오늘은 풀업과 로우를 많이 했습니다. 등 근육이 많이 단련된 느낌입니다.', '2024-11-10');

select * from workouts;

-- 운동 루틴 테이블 (운동 종류와 카테고리 추가)
DROP TABLE IF EXISTS workout_exercises;
CREATE TABLE workout_exercises (
    id BIGINT AUTO_INCREMENT PRIMARY KEY, -- 고유ID
    workout_id BIGINT NOT NULL, -- 운동일기ID
    exercise_name VARCHAR(100) NOT NULL, -- 운동 이름
    category VARCHAR(50), -- 운동 카테고리
    weight INT, -- 무게(kg)
    reps INT,   -- 횟수
    sets INT,   -- 세트 수
    FOREIGN KEY (workout_id) REFERENCES workouts(workout_id) ON DELETE CASCADE
);

INSERT INTO workout_exercises (workout_id, exercise_name, category, weight, reps, sets) VALUES
(1, '스쿼트', '하체', 60, 12, 4),
(1, '레그프레스', '하체', 100, 10, 3),
(2, '랫풀다운', '등', 40, 12, 4),
(2, '풀업', '등', 0, 8, 3),
(3, '크런치', '복부', 0, 20, 3),
(3, '레그레이즈', '복부', 0, 15, 3),
(4, '버피', '전신', 0, 15, 4),
(4, '점핑잭', '전신', 0, 30, 3),
(5, '바벨 컬', '팔', 20, 12, 4),
(5, '덤벨 컬', '팔', 12, 15, 3),
(5, '트라이셉스 푸쉬다운', '팔', 25, 12, 3),
(6, '밀리터리 프레스', '어깨', 30, 12, 4),
(6, '덤벨 숄더 프레스', '어깨', 20, 12, 3),
(7, '런지', '하체', 20, 12, 3),
(7, '레그프레스', '하체', 120, 10, 3),
(8, '케틀벨 스윙', '전신', 16, 20, 4),
(8, '점핑잭', '전신', 0, 25, 3),
(9, '벤치프레스', '가슴', 50, 10, 4),
(9, '덤벨프레스', '가슴', 25, 12, 3),
(10, '풀업', '등', 0, 10, 4),
(10, '로우', '등', 45, 12, 3);

-- SELECT * from workout_exercises;


-- ------------------------- 댓글 -----------------------------------
drop table IF EXISTS comments;
-- 10. 댓글 기록
CREATE TABLE comments (
    comment_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    target_id BIGINT NOT NULL, -- 댓글이 속한 대상의 ID
    target_type ENUM('diet', 'workout') NOT NULL, -- 댓글이 연결된 유형 (식단 or 운동)
    user_id BIGINT NOT NULL, -- 댓글 작성자 ID
    name VARCHAR(100) NOT NULL, -- 이름
    content TEXT NOT NULL, -- 댓글 내용
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    -- 각 유형에 맞는 외래키 제약 설정
    diet_id BIGINT, -- diet 외래키
    workout_id BIGINT, -- workout 외래키
    
    -- 외래키 정의 (조건에 맞게 설정)
    FOREIGN KEY (diet_id) REFERENCES diet(diet_id) ON DELETE CASCADE,
    FOREIGN KEY (workout_id) REFERENCES workouts(workout_id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,
    
    -- target_type에 따라 유효한 외래키 설정을 위한 제약 조건
    CHECK (
        (target_type = 'diet' AND target_id = diet_id) OR
        (target_type = 'workout' AND target_id = workout_id)
    )
);


SELECT * from comments;